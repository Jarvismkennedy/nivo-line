{"version":3,"file":"nivo-line.cjs.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/PointTooltip.js","../src/SliceTooltip.js","../src/props.js","../src/hooks.js","../src/Areas.js","../src/LinesItem.js","../src/Lines.js","../src/SlicesItem.js","../src/Slices.js","../src/Points.js","../src/Mesh.js","../src/Line.js","../src/ResponsiveLine.js","../src/LineCanvas.js","../src/ResponsiveLineCanvas.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { BasicTooltip } from '@nivo/tooltip'\n\nconst LinePointTooltip = ({ point }) => {\n    return (\n        <BasicTooltip\n            id={\n                <span>\n                    x: <strong>{point.data.xFormatted}</strong>, y:{' '}\n                    <strong>{point.data.yFormatted}</strong>\n                </span>\n            }\n            enableChip={true}\n            color={point.serieColor}\n        />\n    )\n}\n\nLinePointTooltip.propTypes = {\n    point: PropTypes.object.isRequired,\n}\n\nexport default memo(LinePointTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '@nivo/core'\nimport { Chip, TableTooltip } from '@nivo/tooltip'\n\nconst SliceTooltip = ({ slice, axis }) => {\n    const theme = useTheme()\n    const otherAxis = axis === 'x' ? 'y' : 'x'\n\n    return (\n        <TableTooltip\n            rows={slice.points.map(point => [\n                <Chip key=\"chip\" color={point.serieColor} style={theme.tooltip.chip} />,\n                point.serieId,\n                <span key=\"value\" style={theme.tooltip.tableCellValue}>\n                    {point.data[`${otherAxis}Formatted`]}\n                </span>,\n            ])}\n        />\n    )\n}\n\nSliceTooltip.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n}\n\nexport default memo(SliceTooltip)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { lineCurvePropType, blendModePropType, motionPropTypes, defsPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType } from '@nivo/colors'\nimport { axisPropType } from '@nivo/axes'\nimport { LegendPropShape } from '@nivo/legends'\nimport PointTooltip from './PointTooltip'\nimport SliceTooltip from './SliceTooltip'\n\nconst commonPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    x: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                    y: PropTypes.oneOfType([\n                        PropTypes.number,\n                        PropTypes.string,\n                        PropTypes.instanceOf(Date),\n                    ]),\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n\n    xScale: PropTypes.object.isRequired,\n    xFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    yScale: PropTypes.object.isRequired,\n    yFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf([\n                'grid',\n                'markers',\n                'axes',\n                'areas',\n                'crosshair',\n                'lines',\n                'slices',\n                'points',\n                'mesh',\n                'legends',\n            ]),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    curve: lineCurvePropType.isRequired,\n\n    axisTop: axisPropType,\n    axisRight: axisPropType,\n    axisBottom: axisPropType,\n    axisLeft: axisPropType,\n\n    enableGridX: PropTypes.bool.isRequired,\n    enableGridY: PropTypes.bool.isRequired,\n    gridXValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n    gridYValues: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        ),\n    ]),\n\n    enablePoints: PropTypes.bool.isRequired,\n    pointSymbol: PropTypes.func,\n    pointSize: PropTypes.number.isRequired,\n    pointColor: PropTypes.any.isRequired,\n    pointBorderWidth: PropTypes.number.isRequired,\n    pointBorderColor: PropTypes.any.isRequired,\n    enablePointLabel: PropTypes.bool.isRequired,\n    pointLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            style: PropTypes.object,\n        })\n    ),\n\n    colors: ordinalColorsPropType.isRequired,\n\n    enableArea: PropTypes.bool.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    areaBaselineValue: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.instanceOf(Date),\n    ]).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    debugMesh: PropTypes.bool.isRequired,\n\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableSlices: PropTypes.oneOf(['x', 'y', false]).isRequired,\n    debugSlices: PropTypes.bool.isRequired,\n    sliceTooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n    enableCrosshair: PropTypes.bool.isRequired,\n    crosshairType: PropTypes.string.isRequired,\n}\n\nexport const LinePropTypes = {\n    ...commonPropTypes,\n    enablePointLabel: PropTypes.bool.isRequired,\n    role: PropTypes.string.isRequired,\n    useMesh: PropTypes.bool.isRequired,\n    ...motionPropTypes,\n    ...defsPropTypes,\n}\n\nexport const LineCanvasPropTypes = {\n    pixelRatio: PropTypes.number.isRequired,\n    ...commonPropTypes,\n}\n\nconst commonDefaultProps = {\n    curve: 'linear',\n\n    xScale: {\n        type: 'point',\n    },\n    yScale: {\n        type: 'linear',\n        min: 0,\n        max: 'auto',\n    },\n\n    layers: [\n        'grid',\n        'markers',\n        'axes',\n        'areas',\n        'crosshair',\n        'lines',\n        'points',\n        'slices',\n        'mesh',\n        'legends',\n    ],\n    axisBottom: {},\n    axisLeft: {},\n    enableGridX: true,\n    enableGridY: true,\n\n    enablePoints: true,\n    pointSize: 6,\n    pointColor: { from: 'color' },\n    pointBorderWidth: 0,\n    pointBorderColor: { theme: 'background' },\n    enablePointLabel: false,\n    pointLabel: 'yFormatted',\n\n    colors: { scheme: 'nivo' },\n    enableArea: false,\n    areaBaselineValue: 0,\n    areaOpacity: 0.2,\n    areaBlendMode: 'normal',\n    lineWidth: 2,\n\n    legends: [],\n\n    isInteractive: true,\n    tooltip: PointTooltip,\n    enableSlices: false,\n    debugSlices: false,\n    sliceTooltip: SliceTooltip,\n    debugMesh: false,\n    enableCrosshair: true,\n    crosshairType: 'bottom-left',\n}\n\nexport const LineDefaultProps = {\n    ...commonDefaultProps,\n    enablePointLabel: false,\n    useMesh: false,\n    animate: true,\n    motionConfig: 'gentle',\n    defs: [],\n    fill: [],\n    role: 'img',\n}\n\nexport const LineCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useCallback, useMemo, useState } from 'react'\nimport { area, line } from 'd3-shape'\nimport { curveFromProp, useTheme, useValueFormatter } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { computeXYScalesForSeries } from '@nivo/scales'\nimport { LineDefaultProps } from './props'\n\nexport const useLineGenerator = ({ curve }) => {\n    return useMemo(\n        () =>\n            line()\n                .defined(d => d.x !== null && d.y !== null)\n                .x(d => d.x)\n                .y(d => d.y)\n                .curve(curveFromProp(curve)),\n        [curve]\n    )\n}\n\nexport const useAreaGenerator = ({ curve, yScale, areaBaselineValue }) => {\n    return useMemo(() => {\n        return area()\n            .defined(d => d.x !== null && d.y !== null)\n            .x(d => d.x)\n            .y1(d => d.y)\n            .y0(d => d.y0)\n            .curve(curveFromProp(curve))\n    }, [curve, yScale, areaBaselineValue])\n}\nconst usePoints = ({ series, getPointColor, getPointBorderColor, formatX, formatY }) => {\n    return useMemo(() => {\n        return series.reduce((acc, serie) => {\n            return [\n                ...acc,\n                ...serie.data\n                    .filter(datum => datum.position.x !== null && datum.position.y !== null)\n                    .map((datum, i) => {\n                        const point = {\n                            id: `${serie.id}.${i}`,\n                            index: acc.length + i,\n                            serieId: serie.id,\n                            serieColor: serie.color,\n                            x: datum.position.x,\n                            y: datum.position.y,\n                        }\n                        point.color = getPointColor(serie)\n                        point.borderColor = getPointBorderColor(point)\n                        point.data = {\n                            ...datum.data,\n                            xFormatted: formatX(datum.data.x),\n                            yFormatted: formatY(datum.data.y),\n                        }\n\n                        return point\n                    }),\n            ]\n        }, [])\n    }, [series, getPointColor, getPointBorderColor, formatX, formatY])\n}\n\nexport const useSlices = ({ enableSlices, points, width, height }) => {\n    return useMemo(() => {\n        if (enableSlices === false) return []\n\n        if (enableSlices === 'x') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.x)) map.set(point.x, [point])\n                else map.get(point.x).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([x, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let x0\n                    if (!prevSlice) x0 = x\n                    else x0 = x - (x - prevSlice[0]) / 2\n\n                    let sliceWidth\n                    if (!nextSlice) sliceWidth = width - x0\n                    else sliceWidth = x - x0 + (nextSlice[0] - x) / 2\n\n                    return {\n                        id: x,\n                        x0,\n                        x,\n                        y0: 0,\n                        y: 0,\n                        width: sliceWidth,\n                        height,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        } else if (enableSlices === 'y') {\n            const map = new Map()\n            points.forEach(point => {\n                if (point.data.x === null || point.data.y === null) return\n                if (!map.has(point.y)) map.set(point.y, [point])\n                else map.get(point.y).push(point)\n            })\n            return Array.from(map.entries())\n                .sort((a, b) => a[0] - b[0])\n                .map(([y, slicePoints], i, slices) => {\n                    const prevSlice = slices[i - 1]\n                    const nextSlice = slices[i + 1]\n\n                    let y0\n                    if (!prevSlice) y0 = y\n                    else y0 = y - (y - prevSlice[0]) / 2\n\n                    let sliceHeight\n                    if (!nextSlice) sliceHeight = height - y0\n                    else sliceHeight = y - y0 + (nextSlice[0] - y) / 2\n\n                    return {\n                        id: y,\n                        x0: 0,\n                        x: 0,\n                        y0,\n                        y,\n                        width,\n                        height: sliceHeight,\n                        points: slicePoints.reverse(),\n                    }\n                })\n        }\n    }, [enableSlices, points])\n}\n\nexport const useLine = ({\n    data,\n    xScale: xScaleSpec = LineDefaultProps.xScale,\n    xFormat,\n    yScale: yScaleSpec = LineDefaultProps.yScale,\n    yFormat,\n    width,\n    height,\n    colors = LineDefaultProps.colors,\n    curve = LineDefaultProps.curve,\n    areaBaselineValue = LineDefaultProps.areaBaselineValue,\n    pointColor = LineDefaultProps.pointColor,\n    pointBorderColor = LineDefaultProps.pointBorderColor,\n    enableSlices = LineDefaultProps.enableSlicesTooltip,\n    enableAreaBetween = false,\n}) => {\n    const formatX = useValueFormatter(xFormat)\n    const formatY = useValueFormatter(yFormat)\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n    const [hiddenIds, setHiddenIds] = useState([])\n\n    const { xScale, yScale, series: rawSeries } = useMemo(\n        () =>\n            computeXYScalesForSeries(\n                data.filter(item => hiddenIds.indexOf(item.id) === -1),\n                xScaleSpec,\n                yScaleSpec,\n                width,\n                height\n            ),\n        [data, hiddenIds, xScaleSpec, yScaleSpec, width, height]\n    )\n    const { legendData, series } = useMemo(() => {\n        const dataWithColor = data.map(line => ({\n            id: line.id,\n            label: line.id,\n            color: getColor(line),\n        }))\n        const series = dataWithColor\n            .map(datum => ({\n                ...rawSeries.find(serie => serie.id === datum.id),\n                color: datum.color,\n            }))\n            .filter(item => Boolean(item.id))\n        const legendData = dataWithColor\n            .map(item => ({ ...item, hidden: !series.find(serie => serie.id === item.id) }))\n            .reverse()\n\n        return { legendData, series }\n    }, [data, rawSeries, getColor])\n\n    const toggleSerie = useCallback(id => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const points = usePoints({\n        series,\n        getPointColor,\n        getPointBorderColor,\n        formatX,\n        formatY,\n    })\n\n    const slices = useSlices({\n        enableSlices,\n        points,\n        width,\n        height,\n    })\n\n    const lineGenerator = useLineGenerator({ curve })\n    const areaGenerator = useAreaGenerator({\n        curve,\n        yScale,\n        areaBaselineValue,\n    })\n\n    return {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        getColor,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig, blendModePropType } from '@nivo/core'\n\nconst AreaPath = ({ areaBlendMode, areaOpacity, color, fill, path }) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.path\n            d={animatedPath}\n            fill={fill ? fill : animatedProps.color}\n            fillOpacity={areaOpacity}\n            strokeWidth={0}\n            style={{\n                mixBlendMode: areaBlendMode,\n            }}\n        />\n    )\n}\n\nAreaPath.propTypes = {\n    areaBlendMode: blendModePropType.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    fill: PropTypes.string,\n    path: PropTypes.string.isRequired,\n}\n\nconst Areas = ({ areaGenerator, areaOpacity, areaBlendMode, lines }) => {\n    const computedLines = lines.slice(0).reverse()\n\n    return (\n        <g>\n            {computedLines.map(line => (\n                <AreaPath\n                    key={line.id}\n                    path={areaGenerator(line.data.map(d => d.position))}\n                    {...{ areaOpacity, areaBlendMode, ...line }}\n                />\n            ))}\n        </g>\n    )\n}\n\nAreas.propTypes = {\n    areaGenerator: PropTypes.func.isRequired,\n    areaOpacity: PropTypes.number.isRequired,\n    areaBlendMode: blendModePropType.isRequired,\n    lines: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default memo(Areas)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath } from '@nivo/core'\n\nconst LinesItem = ({ lineGenerator, points, color, thickness }) => {\n    const path = useMemo(() => lineGenerator(points), [lineGenerator, points])\n    const animatedPath = useAnimatedPath(path)\n\n    return <animated.path d={animatedPath} fill=\"none\" strokeWidth={thickness} stroke={color} />\n}\n\nLinesItem.propTypes = {\n    points: PropTypes.arrayOf(\n        PropTypes.shape({\n            x: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            y: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        })\n    ),\n    lineGenerator: PropTypes.func.isRequired,\n    color: PropTypes.string.isRequired,\n    thickness: PropTypes.number.isRequired,\n}\n\nexport default memo(LinesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport LinesItem from './LinesItem'\n\nconst Lines = ({ lines, lineGenerator, lineWidth }) => {\n    return lines\n        .slice(0)\n        .reverse()\n        .map(({ id, data, color }) => (\n            <LinesItem\n                key={id}\n                id={id}\n                points={data.map(d => d.position)}\n                lineGenerator={lineGenerator}\n                color={color}\n                thickness={lineWidth}\n            />\n        ))\n}\n\nLines.propTypes = {\n    lines: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n            data: PropTypes.arrayOf(\n                PropTypes.shape({\n                    data: PropTypes.shape({\n                        x: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                        y: PropTypes.oneOfType([\n                            PropTypes.string,\n                            PropTypes.number,\n                            PropTypes.instanceOf(Date),\n                        ]),\n                    }).isRequired,\n                    position: PropTypes.shape({\n                        x: PropTypes.number,\n                        y: PropTypes.number,\n                    }).isRequired,\n                })\n            ).isRequired,\n        })\n    ).isRequired,\n    lineWidth: PropTypes.number.isRequired,\n    lineGenerator: PropTypes.func.isRequired,\n}\n\nexport default memo(Lines)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\n\nconst SlicesItem = ({\n    slice,\n    axis,\n    debug,\n    tooltip,\n    isCurrent,\n    currentlyHovered,\n    setSliceId,\n    current,\n    setCurrent,\n    setCurrentlyHovered,\n    height,\n    onClick,\n}) => {\n    const { showTooltipFromEvent, showTooltipAt, hideTooltip } = useTooltip()\n\n    const showSynchTooltip = useCallback(() => {\n        if (isCurrent) {\n            showTooltipAt(createElement(tooltip, { slice, axis }), [slice.x, height / 2], 'top')\n        }\n    }, [slice, isCurrent, currentlyHovered, showTooltipAt, tooltip])\n\n    useEffect(() => {\n        if (current === null) {\n            hideTooltip()\n        }\n    }, [current, hideTooltip])\n\n    useEffect(() => {\n        showSynchTooltip()\n    }, [showSynchTooltip])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            showTooltipAt(createElement(tooltip, { slice, axis }), [slice.x, height / 2], 'top')\n            setCurrentlyHovered(true)\n            setSliceId && setSliceId(slice.id)\n            setCurrent(slice)\n        },\n        [showTooltipFromEvent, tooltip, slice]\n    )\n\n    // const handleMouseMove = useCallback(\n    //     event => {\n    //         //showTooltipFromEvent(createElement(tooltip, { slice, axis }), event, 'right')\n    //         setPointIndex(slice.id)\n    //     },\n    //     [showTooltipFromEvent, tooltip, slice, setPointIndex]\n    // )\n\n    const handleMouseLeave = useCallback(() => {\n        hideTooltip()\n        setSliceId && setSliceId(null)\n        setCurrentlyHovered(false)\n        setCurrent(null)\n    }, [hideTooltip, setSliceId, setCurrentlyHovered])\n\n    const handleClick = useCallback(\n        event => {\n            onClick && onClick(slice, event)\n        },\n        [onClick]\n    )\n    return (\n        <rect\n            x={slice.x0}\n            y={slice.y0}\n            width={slice.width}\n            height={slice.height}\n            stroke=\"red\"\n            strokeWidth={debug ? 1 : 0}\n            strokeOpacity={0.75}\n            fill=\"red\"\n            fillOpacity={isCurrent && debug ? 0.35 : 0}\n            onMouseEnter={handleMouseEnter}\n            // onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n        />\n    )\n}\n\nSlicesItem.propTypes = {\n    slice: PropTypes.object.isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    isCurrent: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(SlicesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SlicesItem from './SlicesItem'\n\nconst Slices = ({\n    slices,\n    axis,\n    debug,\n    height,\n    tooltip,\n    current,\n    setCurrent,\n    setSliceId,\n    setCurrentlyHovered,\n    currentlyHovered,\n    onClick,\n}) => {\n    return slices.map(slice => (\n        <SlicesItem\n            key={slice.id}\n            slice={slice}\n            axis={axis}\n            debug={debug}\n            height={height}\n            tooltip={tooltip}\n            setCurrent={setCurrent}\n            isCurrent={current !== null && current.id === slice.id}\n            setSliceId={setSliceId}\n            currentlyHovered={currentlyHovered}\n            setCurrentlyHovered={setCurrentlyHovered}\n            current={current}\n            onClick={onClick}\n        />\n    ))\n}\n\nSlices.propTypes = {\n    slices: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            points: PropTypes.arrayOf(PropTypes.object).isRequired,\n        })\n    ).isRequired,\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    debug: PropTypes.bool.isRequired,\n    height: PropTypes.number.isRequired,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    current: PropTypes.object,\n    setCurrent: PropTypes.func.isRequired,\n}\n\nexport default memo(Slices)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { getLabelGenerator, DotsItem, useTheme } from '@nivo/core'\n\nconst Points = ({ points, symbol, size, borderWidth, enableLabel, label, labelYOffset }) => {\n    const theme = useTheme()\n    const getLabel = getLabelGenerator(label)\n\n    /**\n     * We reverse the `points` array so that points from the lower lines in stacked lines\n     * graph are drawn on top. See https://github.com/plouc/nivo/issues/1051.\n     */\n    const mappedPoints = points.reverse().map(point => {\n        const mappedPoint = {\n            id: point.id,\n            x: point.x,\n            y: point.y,\n            datum: point.data,\n            fill: point.color,\n            stroke: point.borderColor,\n            label: enableLabel ? getLabel(point.data) : null,\n        }\n\n        return mappedPoint\n    })\n\n    return (\n        <g>\n            {mappedPoints.map(point => (\n                <DotsItem\n                    key={point.id}\n                    x={point.x}\n                    y={point.y}\n                    datum={point.datum}\n                    symbol={symbol}\n                    size={size}\n                    color={point.fill}\n                    borderWidth={borderWidth}\n                    borderColor={point.stroke}\n                    label={point.label}\n                    labelYOffset={labelYOffset}\n                    theme={theme}\n                />\n            ))}\n        </g>\n    )\n}\n\nPoints.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object),\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: PropTypes.func.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.func.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(Points)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo, useCallback, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\n\nconst Mesh = ({\n    points,\n    width,\n    height,\n    margin,\n    setCurrent,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    debug,\n}) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseEnter && onMouseEnter(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseEnter, margin]\n    )\n\n    const handleMouseMove = useCallback(\n        (point, event) => {\n            showTooltipAt(\n                createElement(tooltip, { point }),\n                [point.x + margin.left, point.y + margin.top],\n                'top'\n            )\n            setCurrent(point)\n            onMouseMove && onMouseMove(point, event)\n        },\n        [setCurrent, showTooltipAt, tooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (point, event) => {\n            hideTooltip()\n            setCurrent(null)\n            onMouseLeave && onMouseLeave(point, event)\n        },\n        [hideTooltip, setCurrent, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (point, event) => {\n            onClick && onClick(point, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={points}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            debug={debug}\n        />\n    )\n}\n\nMesh.propTypes = {\n    points: PropTypes.arrayOf(PropTypes.object).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    onMouseEnter: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onClick: PropTypes.func,\n    tooltip: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n    debug: PropTypes.bool.isRequired,\n}\n\nexport default memo(Mesh)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Fragment, useState, useEffect } from 'react'\nimport {\n    bindDefs,\n    withContainer,\n    useDimensions,\n    useTheme,\n    SvgWrapper,\n    CartesianMarkers,\n} from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { Axes, Grid } from '@nivo/axes'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { Crosshair } from '@nivo/tooltip'\nimport { useLine } from './hooks'\nimport { LinePropTypes, LineDefaultProps } from './props'\nimport Areas from './Areas'\nimport Lines from './Lines'\nimport Slices from './Slices'\nimport Points from './Points'\nimport Mesh from './Mesh'\n\nconst Line = props => {\n    const {\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        layers,\n        curve,\n        areaBaselineValue,\n\n        colors,\n\n        margin: partialMargin,\n        width,\n        height,\n\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        enableGridX,\n        enableGridY,\n        gridXValues,\n        gridYValues,\n\n        lineWidth,\n        enableArea,\n        enableAreaBetween,\n        areaOpacity,\n        areaBlendMode,\n\n        enablePoints,\n        pointSymbol,\n        pointSize,\n        pointColor,\n        pointBorderWidth,\n        pointBorderColor,\n        enablePointLabel,\n        pointLabel,\n        pointLabelYOffset,\n\n        defs,\n        fill,\n\n        markers,\n\n        legends,\n\n        isInteractive,\n\n        useMesh,\n        debugMesh,\n\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n\n        tooltip,\n        sliceId,\n        setSliceId,\n\n        enableSlices,\n        debugSlices,\n        sliceTooltip,\n\n        enableCrosshair,\n        crosshairType,\n\n        role,\n    } = props\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        legendData,\n        toggleSerie,\n        lineGenerator,\n        areaGenerator,\n        series,\n        xScale,\n        yScale,\n        slices,\n        points,\n    } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n        enableSlices,\n        enableAreaBetween,\n    })\n\n    const theme = useTheme()\n    const getPointColor = useInheritedColor(pointColor, theme)\n    const getPointBorderColor = useInheritedColor(pointBorderColor, theme)\n\n    const [currentPoint, setCurrentPoint] = useState(null)\n    const [currentSlice, setCurrentSlice] = useState(null)\n\n    const [currentlyHovered, setCurrentlyHovered] = useState(false)\n    const [sliceByIndex, setSliceByIndex] = useState({})\n\n    useEffect(() => {\n        if (!slices) {\n            return\n        }\n\n        let sliceDict = {}\n        for (let i = 0; i < slices.length; i++) {\n            sliceDict[slices[i].id] = slices[i]\n        }\n        setSliceByIndex(sliceDict)\n    }, [data, slices])\n\n    useEffect(() => {\n        if (sliceId == null) {\n            setCurrentSlice(null)\n        } else if (!currentlyHovered && setSliceId) {\n            setCurrentSlice(sliceByIndex[sliceId] || null)\n        }\n    }, [sliceId, sliceByIndex])\n\n    const layerById = {\n        grid: (\n            <Grid\n                key=\"grid\"\n                theme={theme}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={enableGridX ? xScale : null}\n                yScale={enableGridY ? yScale : null}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        ),\n        markers: (\n            <CartesianMarkers\n                key=\"markers\"\n                markers={markers}\n                width={innerWidth}\n                height={innerHeight}\n                xScale={xScale}\n                yScale={yScale}\n                theme={theme}\n            />\n        ),\n        axes: (\n            <Axes\n                key=\"axes\"\n                xScale={xScale}\n                yScale={yScale}\n                width={innerWidth}\n                height={innerHeight}\n                theme={theme}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        ),\n        areas: null,\n        lines: (\n            <Lines key=\"lines\" lines={series} lineGenerator={lineGenerator} lineWidth={lineWidth} />\n        ),\n        slices: null,\n        points: null,\n        crosshair: null,\n        mesh: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend.${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legend.data || legendData}\n                theme={theme}\n                toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n            />\n        )),\n    }\n\n    const boundDefs = bindDefs(defs, series, fill)\n\n    if (enableArea) {\n        layerById.areas = (\n            <Areas\n                key=\"areas\"\n                areaGenerator={areaGenerator}\n                areaOpacity={areaOpacity}\n                areaBlendMode={areaBlendMode}\n                lines={series}\n            />\n        )\n    }\n\n    if (isInteractive && enableSlices !== false) {\n        layerById.slices = (\n            <Slices\n                key=\"slices\"\n                slices={slices}\n                axis={enableSlices}\n                debug={debugSlices}\n                height={innerHeight}\n                tooltip={sliceTooltip}\n                current={currentSlice}\n                setCurrent={setCurrentSlice}\n                setCurrentlyHovered={setCurrentlyHovered}\n                setSliceId={setSliceId}\n                currentlyHovered={currentlyHovered}\n                onClick={onClick}\n            />\n        )\n    }\n\n    if (enablePoints) {\n        layerById.points = (\n            <Points\n                key=\"points\"\n                points={points}\n                symbol={pointSymbol}\n                size={pointSize}\n                color={getPointColor}\n                borderWidth={pointBorderWidth}\n                borderColor={getPointBorderColor}\n                enableLabel={enablePointLabel}\n                label={pointLabel}\n                labelYOffset={pointLabelYOffset}\n            />\n        )\n    }\n\n    if (isInteractive && enableCrosshair) {\n        if (currentPoint !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentPoint.x}\n                    y={currentPoint.y}\n                    type={crosshairType}\n                />\n            )\n        }\n        if (currentSlice !== null) {\n            layerById.crosshair = (\n                <Crosshair\n                    key=\"crosshair\"\n                    width={innerWidth}\n                    height={innerHeight}\n                    x={currentSlice.x}\n                    y={currentSlice.y}\n                    type={enableSlices}\n                />\n            )\n        }\n    }\n    if (isInteractive && useMesh && enableSlices === false) {\n        layerById.mesh = (\n            <Mesh\n                key=\"mesh\"\n                points={points}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                current={currentPoint}\n                setCurrent={setCurrentPoint}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                onClick={onClick}\n                tooltip={tooltip}\n                debug={debugMesh}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper\n            defs={boundDefs}\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return (\n                        <Fragment key={i}>\n                            {layer({\n                                ...props,\n                                innerWidth,\n                                innerHeight,\n                                series,\n                                slices,\n                                points,\n                                xScale,\n                                yScale,\n                                lineGenerator,\n                                areaGenerator,\n                                currentPoint,\n                                setCurrentPoint,\n                                currentSlice,\n                                setCurrentSlice,\n                            })}\n                        </Fragment>\n                    )\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nLine.propTypes = LinePropTypes\nLine.defaultProps = LineDefaultProps\n\nexport default withContainer(Line)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Line from './Line'\n\nconst ResponsiveLine = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Line width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveLine\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, useRef, useEffect, useState, useCallback, forwardRef } from 'react'\nimport {\n    withContainer,\n    useDimensions,\n    useTheme,\n    getRelativeCursor,\n    isCursorInRect,\n} from '@nivo/core'\nimport { renderAxesToCanvas, renderGridLinesToCanvas } from '@nivo/axes'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useVoronoiMesh, renderVoronoiToCanvas, renderVoronoiCellToCanvas } from '@nivo/voronoi'\nimport { LineCanvasPropTypes, LineCanvasDefaultProps } from './props'\nimport { useLine } from './hooks'\n\nconst LineCanvas = ({\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio,\n\n    data,\n    xScale: xScaleSpec,\n    xFormat,\n    yScale: yScaleSpec,\n    yFormat,\n    curve,\n\n    layers,\n\n    colors,\n    lineWidth,\n\n    enableArea,\n    areaBaselineValue,\n    areaOpacity,\n\n    enablePoints,\n    pointSize,\n    pointColor,\n    pointBorderWidth,\n    pointBorderColor,\n\n    enableGridX,\n    gridXValues,\n    enableGridY,\n    gridYValues,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n\n    legends,\n\n    isInteractive,\n    debugMesh,\n    //onMouseEnter,\n    //onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n\n    canvasRef,\n}) => {\n    const canvasEl = useRef(null)\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const theme = useTheme()\n    const [currentPoint, setCurrentPoint] = useState(null)\n\n    const { lineGenerator, areaGenerator, series, xScale, yScale, points } = useLine({\n        data,\n        xScale: xScaleSpec,\n        xFormat,\n        yScale: yScaleSpec,\n        yFormat,\n        width: innerWidth,\n        height: innerHeight,\n        colors,\n        curve,\n        areaBaselineValue,\n        pointColor,\n        pointBorderColor,\n    })\n\n    const { delaunay, voronoi } = useVoronoiMesh({\n        points,\n        width: innerWidth,\n        height: innerHeight,\n        debug: debugMesh,\n    })\n\n    useEffect(() => {\n        if (canvasRef) {\n            canvasRef.current = canvasEl.current\n        }\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n        ctx.translate(margin.left, margin.top)\n\n        layers.forEach(layer => {\n            if (typeof layer === 'function') {\n                layer({\n                    ctx,\n                    innerWidth,\n                    innerHeight,\n                    series,\n                    points,\n                    xScale,\n                    yScale,\n                    lineWidth,\n                    lineGenerator,\n                    areaGenerator,\n                    currentPoint,\n                    setCurrentPoint,\n                })\n            }\n\n            if (layer === 'grid' && theme.grid.line.strokeWidth > 0) {\n                ctx.lineWidth = theme.grid.line.strokeWidth\n                ctx.strokeStyle = theme.grid.line.stroke\n\n                enableGridX &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: xScale,\n                        axis: 'x',\n                        values: gridXValues,\n                    })\n\n                enableGridY &&\n                    renderGridLinesToCanvas(ctx, {\n                        width: innerWidth,\n                        height: innerHeight,\n                        scale: yScale,\n                        axis: 'y',\n                        values: gridYValues,\n                    })\n            }\n\n            if (layer === 'axes') {\n                renderAxesToCanvas(ctx, {\n                    xScale,\n                    yScale,\n                    width: innerWidth,\n                    height: innerHeight,\n                    top: axisTop,\n                    right: axisRight,\n                    bottom: axisBottom,\n                    left: axisLeft,\n                    theme,\n                })\n            }\n\n            if (layer === 'areas' && enableArea === true) {\n                ctx.save()\n                ctx.globalAlpha = areaOpacity\n\n                areaGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.fillStyle = serie.color\n                    ctx.beginPath()\n                    areaGenerator(serie.data.map(d => d.position))\n                    ctx.fill()\n                })\n\n                ctx.restore()\n            }\n\n            if (layer === 'lines') {\n                lineGenerator.context(ctx)\n                series.forEach(serie => {\n                    ctx.strokeStyle = serie.color\n                    ctx.lineWidth = lineWidth\n                    ctx.beginPath()\n                    lineGenerator(serie.data.map(d => d.position))\n                    ctx.stroke()\n                })\n            }\n\n            if (layer === 'points' && enablePoints === true && pointSize > 0) {\n                points.forEach(point => {\n                    ctx.fillStyle = point.color\n                    ctx.beginPath()\n                    ctx.arc(point.x, point.y, pointSize / 2, 0, 2 * Math.PI)\n                    ctx.fill()\n\n                    if (pointBorderWidth > 0) {\n                        ctx.strokeStyle = point.borderColor\n                        ctx.lineWidth = pointBorderWidth\n                        ctx.stroke()\n                    }\n                })\n            }\n\n            if (layer === 'mesh' && debugMesh === true) {\n                renderVoronoiToCanvas(ctx, voronoi)\n                if (currentPoint) {\n                    renderVoronoiCellToCanvas(ctx, voronoi, currentPoint.index)\n                }\n            }\n\n            if (layer === 'legends') {\n                const legendData = series\n                    .map(serie => ({\n                        id: serie.id,\n                        label: serie.id,\n                        color: serie.color,\n                    }))\n                    .reverse()\n\n                legends.forEach(legend => {\n                    renderLegendToCanvas(ctx, {\n                        ...legend,\n                        data: legend.data || legendData,\n                        containerWidth: innerWidth,\n                        containerHeight: innerHeight,\n                        theme,\n                    })\n                })\n            }\n        })\n    }, [\n        canvasEl,\n        outerWidth,\n        outerHeight,\n        layers,\n        theme,\n        lineGenerator,\n        series,\n        xScale,\n        yScale,\n        enableGridX,\n        gridXValues,\n        enableGridY,\n        gridYValues,\n        axisTop,\n        axisRight,\n        axisBottom,\n        axisLeft,\n        legends,\n        points,\n        enablePoints,\n        pointSize,\n        currentPoint,\n    ])\n\n    const getPointFromMouseEvent = useCallback(\n        event => {\n            const [x, y] = getRelativeCursor(canvasEl.current, event)\n            if (!isCursorInRect(margin.left, margin.top, innerWidth, innerHeight, x, y)) return null\n\n            const pointIndex = delaunay.find(x - margin.left, y - margin.top)\n            return points[pointIndex]\n        },\n        [canvasEl, margin, innerWidth, innerHeight, delaunay]\n    )\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = useCallback(\n        event => {\n            const point = getPointFromMouseEvent(event)\n            setCurrentPoint(point)\n\n            if (point) {\n                showTooltipFromEvent(createElement(tooltip, { point }), event)\n            } else {\n                hideTooltip()\n            }\n        },\n        [getPointFromMouseEvent, setCurrentPoint, showTooltipFromEvent, hideTooltip, tooltip]\n    )\n\n    const handleMouseLeave = useCallback(\n        event => {\n            hideTooltip()\n            setCurrentPoint(null)\n            currentPoint && onMouseLeave && onMouseLeave(currentPoint, event)\n        },\n        [hideTooltip, setCurrentPoint, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        event => {\n            if (onClick) {\n                const point = getPointFromMouseEvent(event)\n                point && onClick(point, event)\n            }\n        },\n        [getPointFromMouseEvent, onClick]\n    )\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nLineCanvas.propTypes = LineCanvasPropTypes\nLineCanvas.defaultProps = LineCanvasDefaultProps\n\nconst LineCanvasWithContainer = withContainer(LineCanvas)\n\nexport default forwardRef((props, ref) => <LineCanvasWithContainer {...props} canvasRef={ref} />)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { forwardRef } from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport LineCanvas from './LineCanvas'\n\nconst ResponsiveLineCanvas = (props, ref) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <LineCanvas width={width} height={height} {...props} ref={ref} />}\n    </ResponsiveWrapper>\n)\n\nexport default forwardRef(ResponsiveLineCanvas)\n"],"names":["defineProperty","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","LinePointTooltip","point","_jsx","BasicTooltip","_jsxs","data","xFormatted","yFormatted","serieColor","memo","SliceTooltip","slice","axis","theme","useTheme","otherAxis","TableTooltip","points","map","Chip","tooltip","chip","serieId","tableCellValue","commonPropTypes","PropTypes","arrayOf","shape","id","oneOfType","string","number","isRequired","x","instanceOf","Date","y","xScale","object","xFormat","func","yScale","yFormat","layers","oneOf","curve","lineCurvePropType","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","bool","enableGridY","gridXValues","gridYValues","enablePoints","pointSymbol","pointSize","pointColor","any","pointBorderWidth","pointBorderColor","enablePointLabel","pointLabel","markers","value","style","colors","ordinalColorsPropType","enableArea","areaOpacity","areaBlendMode","blendModePropType","areaBaselineValue","lineWidth","legends","LegendPropShape","isInteractive","debugMesh","enableSlices","debugSlices","sliceTooltip","enableCrosshair","crosshairType","LinePropTypes","role","useMesh","motionPropTypes","defsPropTypes","LineCanvasPropTypes","pixelRatio","commonDefaultProps","type","min","max","from","scheme","PointTooltip","LineDefaultProps","animate","motionConfig","defs","fill","LineCanvasDefaultProps","window","devicePixelRatio","useLineGenerator","useMemo","line","defined","d","curveFromProp","useAreaGenerator","area","y1","y0","usePoints","series","getPointColor","getPointBorderColor","formatX","formatY","reduce","acc","serie","filter","datum","position","i","index","length","color","borderColor","useSlices","width","height","Map","forEach","has","set","get","push","Array","entries","sort","a","b","slices","slicePoints","prevSlice","nextSlice","x0","sliceWidth","reverse","sliceHeight","useLine","xScaleSpec","yScaleSpec","enableSlicesTooltip","enableAreaBetween","useValueFormatter","getColor","useOrdinalColorScale","useInheritedColor","useState","hiddenIds","setHiddenIds","computeXYScalesForSeries","item","indexOf","rawSeries","dataWithColor","label","find","Boolean","legendData","hidden","toggleSerie","useCallback","state","lineGenerator","areaGenerator","AreaPath","path","useMotionConfig","springConfig","config","animatedPath","useAnimatedPath","animatedProps","useSpring","immediate","animated","mixBlendMode","Areas","lines","computedLines","LinesItem","thickness","Lines","SlicesItem","debug","isCurrent","currentlyHovered","setSliceId","current","setCurrent","setCurrentlyHovered","onClick","useTooltip","showTooltipFromEvent","showTooltipAt","hideTooltip","showSynchTooltip","createElement","useEffect","handleMouseEnter","event","handleMouseLeave","handleClick","Slices","Points","symbol","size","borderWidth","enableLabel","labelYOffset","getLabel","getLabelGenerator","mappedPoints","mappedPoint","stroke","DotsItem","Mesh","margin","onMouseEnter","onMouseMove","onMouseLeave","left","top","handleMouseMove","BaseMesh","Line","props","partialMargin","pointLabelYOffset","sliceId","useDimensions","innerWidth","innerHeight","outerWidth","outerHeight","currentPoint","setCurrentPoint","currentSlice","setCurrentSlice","sliceByIndex","setSliceByIndex","sliceDict","layerById","grid","Grid","CartesianMarkers","axes","Axes","areas","crosshair","mesh","legend","BoxLegendSvg","undefined","boundDefs","bindDefs","Crosshair","SvgWrapper","layer","Fragment","defaultProps","withContainer","ResponsiveLine","ResponsiveWrapper","LineCanvas","canvasRef","canvasEl","useRef","useVoronoiMesh","delaunay","voronoi","ctx","getContext","scale","fillStyle","background","fillRect","translate","strokeWidth","strokeStyle","renderGridLinesToCanvas","values","renderAxesToCanvas","right","bottom","save","globalAlpha","context","beginPath","restore","arc","Math","PI","renderVoronoiToCanvas","renderVoronoiCellToCanvas","renderLegendToCanvas","containerWidth","containerHeight","getPointFromMouseEvent","getRelativeCursor","isCursorInRect","pointIndex","handleMouseHover","cursor","LineCanvasWithContainer","forwardRef","ref","ResponsiveLineCanvas"],"mappings":"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"}